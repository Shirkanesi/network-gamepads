/* connecting with an xbox controller */

char peer0_2[] = { /* Hello message from client (msg_type = 0x01, version = 0x01, requested slot auto (0x00)) */
0x01, 0x01, 0x00 };
char peer1_2[] = { /* Password required message from server (msg_type = 0xf5) */
0xf5 };
char peer0_3[] = { /* Password message from client (msg_type = 0x02, length of password = 0x7, password = foobar\0 */
0x02, 0x07, 0x66, 0x6f, 0x6f, 0x62, 0x61, 0x72, 
0x00 };
char peer1_3[] = { /* Setup required message from server (msg_type = 0xf6) */
0xf6 };
char peer0_4[] = { /* Device message from client (msg_type = 0x04, length of name = 0x50,
                      type = 0x02 (gamepad), input_id struct from device, name of device (padded to 80 chars) ) */
0x04, 0x50, 0x02, 0x00, 0x03, 0x00, 0x5e, 0x04, 
0x8e, 0x02, 0x14, 0x01, 0x4d, 0x69, 0x63, 0x72, 
0x6f, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x58, 0x2d, 
0x42, 0x6f, 0x78, 0x20, 0x33, 0x36, 0x30, 0x20, 
0x70, 0x61, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00 };
char peer0_5[] = { /* 8 absinfo messages from client: (msg_type = 0x03, axis, input_absinfo) */
0x03, 0x00, 0x00, 0x00, 0xb1, 0xf9, 0xff, 0xff, 
0x00, 0x80, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 
0x10, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 
0xc3, 0xfd, 0xff, 0xff, 0x00, 0x80, 0xff, 0xff, 
0xff, 0x7f, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 
0x29, 0xf3, 0xff, 0xff, 0x00, 0x80, 0xff, 0xff, 
0xff, 0x7f, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x03, 0x04, 0x00, 0x00, 0x55, 0xf0, 0xff, 0xff, 
0x00, 0x80, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 
0x10, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0x05, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xff, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x03, 0x11, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x05 };
char peer1_4[] = { /* Success message from server: (msg_type = 0xf0, given slot) */
0xf0, 0x01 };
